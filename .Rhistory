pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
summary(ord_mod_all)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
td = read.csv(here("data", "ratings_tidy.csv"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("version_2", "version2:question_typeleast_affected_questions", "version2:question_typemost_interested_qs", "version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Least Interested Questions", "b_version2:question_typemost_interested_qs" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Least Interested Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Least Interested Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions")) + theme_minimal()
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions", "b_version2:question_typemost_interested_qs" = "Least Interested Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions",
"b_version2:question_typeleast_affected_questions" = "Least Affected Questions")) + theme_minimal()
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c(                 "b_version2:question_typeleast_affected_questions" = "Least Affected Questions",     "b_version2:question_typesemi_affected_questions" = "Semi-affected questions","b_version2:question_typemost_interested_qs" = "Most Interested Questions","b_version2" = "Directly Affected Questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Least Interested Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Interested Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
unique(pct_df_preq_all$question_type)
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "most_interested_qs", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Most interested questions", "Semi-affected questions"))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "most_interested_qs", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Most interested questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Directly affected questions','Most interested questions%','Semi-affected questions%','Least affected questions%'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "most_interested_qs", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Most interested questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Directly affected questions','Most interested questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "most_interested_qs", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Most interested questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Most important questions','Directly affected questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "most_interested_qs", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Most important questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Most important questions', 'Directly affected questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "most_interested_qs", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Most important questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Most important questions', 'Directly affected questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
View(posterior)
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c(       "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions",
"b_version2" = "Directly Affected Questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
?scale_y_discrete
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions")) +
scale_y_discrete(limits = c("Most Important Questions",
"Directly Affected Questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions")) +
scale_y_discrete(limits = c("b_version2",
"b_version2:question_typeleast_affected_questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2",
"b_version2:question_typeleast_affected_questions")) +
+
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2",
"b_version2:question_typeleast_affected_questions")) +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
?mcmc_areas
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions",
limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")
))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")
))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")
)
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")
,
labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions")
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs"),
labels=c("b_version2" = "Directly Affected Questions",                  "b_version2:question_typeleast_affected_questions" = "Least Affected Questions", "b_version2:question_typemost_interested_qs" = "Most Important Questions", "b_version2:question_typesemi_affected_questions" = "Semi-affected questions"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")) + theme_minimal()
brms::conditional_effects(ord_mod_all, categorical = TRUE)
ord_mod_class = brms::brm(rating ~ current_class*question_type + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_class.rds"))
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
td = read.csv(here("data", "ratings_tidy.csv"))
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")) + theme_minimal()
ord_mod_class = brms::brm(rating ~ current_class*version + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_class.rds"))
rating_ver_class = td %>%
group_by(version, current_class) %>%
summarise(n_t = n())
pct_df_preq_all_class = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver_class) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all_class %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
pct_df_preq_all_class %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen"))
rating_ver_class = td %>%
group_by(version, current_class) %>%
summarise(n_t = n())
pct_df_preq_all_class = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver_class) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all_class %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(current_class~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
View(pct_df_preq_all_class)
rating_ver_class = td %>%
group_by(version, current_class) %>%
summarise(n_t = n())
pct_df_preq_all_class = td %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver_class) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all_class %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(current_class~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
rating_ver_class = td %>%
group_by(version, current_class) %>%
summarise(n_t = n())
pct_df_preq_all_class = td %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver_class) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all_class %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(current_class~version) + theme_apa() + xlab("Rating choice") +
ylab("Current Class") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
posterior_o<- as.matrix(ord_mod_class)
summary(ord_mod_class)
td$current_class = as.factor(td$current_class)
ord_mod_class = brms::brm(rating ~ current_class*version + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_class.rds"))
rating_ver_class = td %>%
group_by(version, current_class) %>%
summarise(n_t = n())
pct_df_preq_all_class = td %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver_class) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all_class %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(current_class~version) + theme_apa() + xlab("Rating choice") +
ylab("Current Class") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
posterior_o<- as.matrix(ord_mod_class)
plot_title <- ggtitle("Posterior distributions",
ord_mod_class
summary(ord_mod_class)
summary(ord_mod_class)
posterior_o<- as.matrix(ord_mod_class)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior_o,
pars = c("b_version",
"b_current_class2:version", "b_current_class3:version", "b_current_class4:version"),
prob = 0.8) + plot_title + theme_minimal()
summary(ord_mod_all)
