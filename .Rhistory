plogis(report_post$CI_low[1]
)
report_post$median[1]
report_post$Median[5]
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typemost_interested_qs", "b_version2:question_typesemi_affected_questions",
"b_current_class"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_current_class",
"b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2", "b_version2:question_typemost_interested_qs")) + theme_minimal()
td = read.csv(here("data", "ratings_tidy.csv")) %>%
```
td = read.csv(here("data", "ratings_tidy.csv"))
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv"))
unique(td$question_type)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(!= "directly_affected_questions")
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(!= "directly_affected_questions")
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "directly_affected_questions")
td$version = as.factor(td$version)
ord_mod_all = brms::brm(rating ~ version*question_type + current_class + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_no_daf.rds"))
report_post = describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2))
report_post = describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2))
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "updated_data.csv"))
# compare the column idea
directly_affected_questions = c("codeswitch_rude",
"valuable",
"no_accent",
"like_becoming_bilingual",
"important_spanish")
old_directly_affected_questions = c("schools_teach",
"effort",
"can_become_bilingual",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating))
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "updated_data.csv"))
# compare the column idea
directly_affected_questions = c("codeswitch_rude",
"valuable",
"no_accent",
"like_becoming_bilingual",
"important_spanish")
old_directly_affected_questions = c("schools_teach",
"effort",
"can_become_bilingual",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% old_directly_affected_questions ~ "old_directly_affected_questions",
)) %>%
filter(!is.na(rating))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(na_q$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
ef %>%
write.csv(here("data", "ratings_tidy.csv"))
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "directly_affected_questions")
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "old_directly_affected_questions")
td$version = as.factor(td$version)
ord_mod_all = brms::brm(rating ~ version*question_type + current_class + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_no_daf.rds"))
View(semi_eff)
report_post = describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2))
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Directly affected questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2)) %>%
knitr::kable(row.names = FALSE)
nc = brms::brm(rating ~ version*question_type + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "no_class.rds"))
summary(nc)
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "updated_data.csv"))
# compare the column idea
directly_affected_questions = c("codeswitch_rude",
"valuable",
"no_accent",
"like_becoming_bilingual",
"important_spanish")
old_directly_affected_questions = c("schools_teach",
"effort",
"can_become_bilingual",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% old_directly_affected_questions ~ "old_directly_affected_questions",
)) %>%
filter(!is.na(rating))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(na_q$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
ef %>%
write.csv(here("data", "ratings_tidy.csv"))
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "old_directly_affected_questions")
td$version = as.factor(td$version)
ord_mod_all = brms::brm(rating ~ version*question_type + current_class + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_no_daf.rds"))
td$version = as.factor(td$version)
ord_mod_all = brms::brm(rating ~ version*question_type + current_class + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_no_daf.rds"))
report_post = describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2))
glimpse(report_post)
report_post$Parameter
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "old_directly_affected_questions")
?recode
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "old_directly_affected_questions") %>%
recode(version, 1 = "experimental_group", 2 = "control_group")
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "old_directly_affected_questions") %>%
mutate(version = case_when(
version == 1 ~ "experimental_group",
version == 2 ~ "control_group"
))
td$version = as.factor(td$version)
ord_mod_all = brms::brm(rating ~ version*question_type + current_class + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_no_daf.rds"))
ggplot(summary_data, aes(y = type, x = mean_rt, color = type)) +
geom_pointrange(aes(xmin = lower_95_ci, xmax = upper_95_ci)) +
scale_fill_manual(values = c("#f0ad4e", "#6c757d", "#5cb85c", "#d9534f")) +
xlab("Word Type") +
ylab("Reaction Time (ms)") +
theme(legend.position = "none") +
ggtitle("Reaction times of the L3 group by word type") +
goodale_theme()
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
library(sjPlot)
library(lme4)
library(lmerTest)
library(ordinal)
library(bayesplot)
library(bayestestR)
td = read.csv(here("data", "ratings_tidy.csv")) %>%
filter(question_type != "old_directly_affected_questions") %>%
mutate(version = case_when(
version == 1 ~ "experimental_group",
version == 2 ~ "control_group"
))
td$version = as.factor(td$version)
ord_mod_all = brms::brm(rating ~ version*question_type + current_class + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_no_daf.rds"))
report_post = describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2))
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Directly affected questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
describe_posterior(
ord_mod_all,
effects = "fixed",
component = "all",
test = c("p_direction", "p_significance"),
centrality = "all"
) %>%
as.data.frame() %>%
mutate(across(where(is.numeric), round, 2)) %>%
knitr::kable(row.names = FALSE)
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_version2", "b_version2:question_typeleast_affected_questions", "b_version2:question_typesemi_affected_questions",
"b_current_class"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_current_class",
"b_version2:question_typeleast_affected_questions",
"b_version2:question_typesemi_affected_questions",
"b_version2")) + theme_minimal()
posterior <- as.matrix(ord_mod_all)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("b_versionexperimental_group", "b_versionexperimental_group:question_typeleast_affected_questions", "b_versionexperimental_group:question_typesemi_affected_questions",
"b_current_class"),
prob = 0.8) + plot_title +
scale_y_discrete(limits = c("b_current_class",
"b_versionexperimental_group:question_typeleast_affected_questions",
"b_versionexperimental_group:question_typesemi_affected_questions",
"b_versionexperimental_group")) + theme_minimal()
td$current_class = as.factor(td$current_class)
ord_mod_class = brms::brm(rating ~ current_class*version + (1 | prompt) +
(1 | participant_number),
family = "cumulative",
data = td,
file = here("data", "models", "ord_mod_class.rds"))
summary(ord_mod_class)
posterior_o<- as.matrix(ord_mod_class)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior_o,
pars = c("b_versionexperimental_group",
"b_current_class:versionexperimental_group", "b_current_class3:versionexperimental_group", "b_current_class4:versionexperimental_group"),
prob = 0.8) + plot_title + theme_minimal()
posterior_o<- as.matrix(ord_mod_class)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
mcmc_areas(posterior_o,
pars = c("b_versionexperimental_group",
"b_current_class2:versionexperimental_group", "b_current_class3:versionexperimental_group", "b_current_class4:versionexperimental_group"),
prob = 0.8) + plot_title + theme_minimal()
rating_ver = td %>%
group_by(version, question_type) %>%
summarise(n_t = n())
pct_df_preq_all = td %>%
group_by(version, rating, question_type) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
# Modify the data
pct_df_preq_all$question_type <- factor(pct_df_preq_all$question_type, levels = c("directly_affected_questions", "least_affected_questions", "semi_affected_questions"),
labels = c("Directly affected questions", "Least affected questions", "Semi-affected questions"))
pct_df_preq_all$question_type_f = factor(pct_df_preq_all$question_type, levels=c('Directly affected questions','Semi-affected questions','Least affected questions'))
pct_df_preq_all %>%
filter(!is.na(question_type)) %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_grid(question_type_f~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings") +
theme(strip.text.y = element_text(angle = 0),
legend.position = "none")
ggsave(here("plots", "fig1.png"), dpi = 600)
