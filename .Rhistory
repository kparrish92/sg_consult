semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating)) %>%
filter(!is.na(question_type))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
na_q = ef %>% filter(is.na(question_type))
na_q
View(ef)
unique(ef$prompt)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
# compare the column idea
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
# compare the column idea
most_interested_qs = c("codeswitch_rude",
"valuable",
"no_accent",
"becoming_bilingual",
"important_spanish")
directly_affected_questions = c("schools_teach",
"effort",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating)) %>%
filter(!is.na(question_type))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(ef$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
ef = l2_data %>%
pivot_longer(cols = c(3:35), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating)) %>%
filter(!is.na(question_type))
View(l2_data)
l2_data$become_bilingual
unique(ef$prompt)
View(l2_data)
most_interested_qs = c("codeswitch_rude",
"valuable",
"no_accent",
"become_bilingual",
"important_spanish")
directly_affected_questions = c("schools_teach",
"effort",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating)) %>%
filter(!is.na(question_type))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(ef$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
ef %>%
write.csv(here("data", "ratings_tidy.csv"))
pct_df %>%
filter(question_type == "least_affected_questions") %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
facet_wrap(~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings")
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
# compare the column idea
most_interested_qs = c("codeswitch_rude",
"valuable",
"no_accent",
"become_bilingual",
"important_spanish")
directly_affected_questions = c("schools_teach",
"effort",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating)) %>%
filter(!is.na(question_type))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(ef$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
most_interested_qs = c("codeswitch_rude",
"valuable",
"no_accent",
"become_bilingual",
"important_spanish")
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
# compare the column idea
most_interested_qs = c("codeswitch_rude",
"valuable",
"no_accent",
"become_bilingual",
"important_spanish")
directly_affected_questions = c("schools_teach",
"effort",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(na_q$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
unique(ef$prompt)
rating_ver_sa = td %>%
filter(question_type == "semi_affected_questions") %>%
group_by(version) %>%
summarise(n_t = n())
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
td = read.csv(here("data", "ratings_tidy.csv"))
rating_ver_sa = td %>%
filter(question_type == "semi_affected_questions") %>%
group_by(version) %>%
summarise(n_t = n())
pct_df_preq_sa = td %>%
filter(question_type == "semi_affected_questions") %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
td = read.csv(here("data", "ratings_tidy.csv"))
rating_ver = td %>%
filter(question_type == "most_interested_qs") %>%
group_by(version) %>%
summarise(n_t = n())
pct_df_preq = td %>%
filter(question_type == "most_interested_qs") %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
knitr::opts_chunk$set(echo = FALSE)
library(here)
library(tidyverse)
library(jtools)
td = read.csv(here("data", "ratings_tidy.csv"))
rating_ver = td %>%
filter(question_type == "most_interested_qs") %>%
group_by(version) %>%
summarise(n_t = n())
pct_df_preq = td %>%
filter(question_type == "most_interested_qs") %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
#| label: pct1
#| fig-cap: "The percentage of each rating by group for the 5 questions in focus"
pct_df_preq %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_wrap(~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings")
rating_ver_da = td %>%
filter(question_type == "directly_affected_questions") %>%
group_by(version) %>%
summarise(n_t = n())
pct_df_preq_da = td %>%
filter(question_type == "directly_affected_questions") %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver_da) %>%
mutate(pct = n/n_t)
#| label: pct3
#| fig-cap: "The percentage of each rating by group for the directly affected questions"
pct_df_preq_da %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_wrap(~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings")
rating_ver_sa = td %>%
filter(question_type == "semi_affected_questions") %>%
group_by(version) %>%
summarise(n_t = n())
pct_df_preq_sa = td %>%
filter(question_type == "semi_affected_questions") %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver_sa) %>%
mutate(pct = n/n_t)
#| fig-cap: "The percentage of each rating by group for the semi-affected questions"
pct_df_preq_sa %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_wrap(~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings")
rating_ver_la = td %>%
filter(question_type == "least_affected_questions") %>%
group_by(version) %>%
summarise(n_t = n())
pct_df_preq_la = td %>%
filter(question_type == "least_affected_questions") %>%
group_by(version, rating) %>%
summarise(n = n()) %>%
left_join(rating_ver) %>%
mutate(pct = n/n_t)
#| label: pct2
#| fig-cap: "The percentage of each rating by group for the least effected questions"
pct_df_preq_la %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
scale_fill_manual(values = c("#71797E", "seagreen")) +
facet_wrap(~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings")
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
unique(ef$prompt)
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating))
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
unique(ef$prompt)
library(here)
library(tidyverse)
l2_data = read.csv(here("data", "feb_11_dat.csv"))
# compare the column idea
most_interested_qs = c("codeswitch_rude",
"valuable",
"no_accent",
"become_bilingual.1",
"important_spanish")
directly_affected_questions = c("schools_teach",
"effort",
"become_bilingual",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"multilingualism_asset",
"acceptable_monolingualism")
semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")
least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")
ef = l2_data %>%
pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>%
mutate(question_type = case_when(
prompt %in% directly_affected_questions ~ "directly_affected_questions",
prompt %in% semi_affected_questions ~ "semi_affected_questions",
prompt %in% least_affected_questions ~ "least_affected_questions",
prompt %in% most_interested_qs ~ "most_interested_qs",
)) %>%
filter(!is.na(rating))
most_int = ef %>% filter(question_type == "most_interested_qs")
dir_aff = ef %>% filter(question_type == "directly_affected_questions")
semi_eff = ef %>% filter(question_type == "semi_affected_questions")
least_aff = ef %>% filter(question_type == "least_affected_questions")
na_q = ef %>% filter(is.na(question_type))
unique(na_q$prompt)
unique(most_int$prompt)
unique(dir_aff$prompt)
unique(semi_eff$prompt)
unique(least_aff$prompt)
most_int = ef %>% filter(question_type == "most_interested_qs")
View(most_int)
most_int %>%
mutate(rating_recode = case_when(
rating == 5 ~ 1,
rating < 5 ~ 0
))
f = most_int %>%
mutate(rating_recode = case_when(
rating == 5 ~ 1,
rating < 5 ~ 0
))
View(f)
glimpse(f)
f$version = as.factor(version)
f$version = as.factor(f$version)
lmerTest::lmer(rating_recode ~ 1 + (1 | prompt) + (1 | participant_number),
family = "binomial",
data = f)
lmerTest::glmer(rating_recode ~ 1 + (1 | prompt) + (1 | participant_number),
family = "binomial",
data = f)
lme4::glmer(rating_recode ~ 1 + (1 | prompt) + (1 | participant_number),
family = "binomial",
data = f)
f$version = as.factor(f$version)
null_mod = lme4::glmer(rating_recode ~ 1 + (1 | prompt) + (1 | participant_number),
family = "binomial",
data = f)
ver_mod = lme4::glmer(rating_recode ~ version + (1 | prompt) + (1 | participant_number),
family = "binomial",
data = f)
anova(null_mod, ver_mod)
summary(ver_mod)
plogis(-.94)
plogis(-.94-.55)
pct_df %>%
filter(question_type == "least_affected_questions") %>%
ggplot(aes(y = pct, x = rating, fill = as.factor(version))) +
geom_col(color = "black", position = "dodge") +
facet_wrap(~version) + theme_apa() + xlab("Rating choice") +
ylab("Percentage of Ratings")
