library(readxl)
l2_data <- read_excel("data/L2 Attitudes Towards Bilingualism and Language Learning (Dec 1)-2.xlsx")

# compare the column idea 


directly_affected_questions = c("schools_teach",
"effort",
"become_bilingual",
"important_spanish",
"idea",
"learn_not_abroad",
"future_career",
"connect_with_people",
"codeswitch_rude",
"multilingualism_asset",
"valuable",
"no_accent",
"acceptable_monolingualism")

semi_affected_questions = c("smarter_two_languages",
"started_younger",
"admire_multilinguals",
"like_langauges",
"interest_languages",
"like_spanish",
"like_hearing_spanish",
"communicating_spanish_speakers",
"worldview",
"boring_spanish_class",
"fun_studying_languages",
"interesting_studying_languages",
"interesting_spanish_cultures",
"beautiful")

least_affected_questions = c("excited_spanish_class",
"outside_engagement",
"spanish_favorite_class",
"difficult_classroom_learning")


library(tidyverse)
ef = l2_data %>% 
  pivot_longer(cols = c(3:34), names_to = "prompt", values_to = "rating") %>% 
  mutate(question_type = case_when(
    prompt %in% directly_affected_questions ~ "directly_affected_questions",
    prompt %in% semi_affected_questions ~ "semi_affected_questions",
    prompt %in% least_affected_questions ~ "least_affected_questions"
      )) %>% 
  filter(!is.na(rating)) %>% 
  filter(!is.na(question_type))


ef %>% 
  ggplot(aes(x = rating)) + 
  geom_histogram(binwidth = 1, color = "black", fill = "seagreen") + facet_wrap(version~question_type)


library(brms)
library(here)


ef$version = as.factor(ef$version)

ef$participant_number = as.factor(ef$participant_number)

ord_mod <- brm(rating ~ question_type*version + 
                               (question_type*version | participant_number) + (1 | prompt),
                             data = ef,
                             family = cumulative(),
                             cores = 4,
                             file = here("data", "models","ord_mod.rds"))


conditional_effects(ord_mod, categorical = TRUE)


# Ratings by question type between groups 

# Ratings by question type between groups and proficiency level 




ef %>%  
  filter(!is.na(rating)) %>% 
  group_by(current_class, question_type) %>% 
  summarise(mean_rating = mean(rating))

l2_data$become_bilingual...15